#BlueJ class context
comment0.target=Pathname
comment0.text=\n\ Objetos\ desta\ classe\ representam\ os\ dados\ do\ pahtname\ de\ um\ arquivo.\ \n\ \n\ @version\ 1.0\n\ @since\ 1.0\ 4\ de\ janeiro\ de\ 2024\n\ @author\ Pedro\ Reis\n
comment1.params=pathId\ path
comment1.target=void\ map(int,\ java.lang.String)
comment1.text=\n\ Insere\ o\ caminho\ de\ um\ diretorio\ e\ sua\ ID\ no\ mapa.\n\ \n\ @param\ pathId\ A\ ID\ do\ caminho\ absoluto\ de\ um\ diretorio\ pesquisado.\n\ \n\ @param\ path\ O\ caminho\ absoluto\ de\ um\ diretorio\ pesquisado.\n
comment2.params=str
comment2.target=java.lang.String\ normalize(java.lang.String)
comment2.text=-------------------------------------------------------------------------\n\ \ \ \ \ \ \ \ \ Converte\ uma\ String\ em\ sua\ versao\ minuscula\ e\ sem\ acentos.\ Eh\n\ \ \ \ \ \ \ \ \ usado\ para\ comparar\ Strings\ em\ nomes\ de\ arquivos.\ Assim\ a\ String\n\ \ \ \ \ \ \ \ \ A\u00E7\u00FAcar\ serah\ considerada\ match\ com\ acucar,\ por\ exemplo.\n--------------------------------------------------------------------------
comment3.params=pathId\ file
comment3.target=Pathname(int,\ java.io.File)
comment3.text=\n\ Construtor.\n\ \n\ @param\ pathId\ A\ ID\ do\ caminho\ deste\ Pathname.\ Com\ ele\ eh\ possivel\ \n\ recuperar\ o\ caminho\ absoluto\ do\ arquivo\ na\ estrutura\ PAHTMAP.\n\ \n\ @param\ file\ O\ arquivo.\n
comment4.params=match\ isSameContent
comment4.target=void\ addMatch(Pathname,\ boolean)
comment4.text=\n\ Insere\ na\ lista\ os\ dados\ de\ um\ match\:\ pathname\ e\ se\ os\ 2\ arquivos\ possuem\ \n\ o\ mesmo\ conteudo.\n\ \n\ @param\ match\n\ @param\ isSameContent\ \n
comment5.params=
comment5.target=java.util.List\ getList()
comment5.text=\n\ Retorna\ a\ lista\ dos\ matches\ que\ ja\ foram\ catalogados\ para\ este\ pathname.\n\ \n\ @return\ A\ lista\ dos\ matches\ que\ ja\ foram\ catalogados\ para\ este\ pathname.\n
comment6.params=sha
comment6.target=void\ setSha(java.lang.String)
comment6.text=\n\ Armazena\ o\ hash\ sha\ 256\ deste\ pathname.\n\ \n\ @param\ sha\ O\ hash\ sha256\ do\ conteudo\ do\ arquivo\ como\ uma\ string\ hex.\n
comment7.params=
comment7.target=java.lang.String\ getSha()
comment7.text=\n\ Retorna\ o\ hash\ sha\ 256\ deste\ pathname.Se\ for\ null,\ o\ hash\ nao\ foi\ obtido\ \n\ ainda.\n\ \n\ @return\ O\ hash\ sha\ 256\ deste\ pathname.Se\ for\ null,\ o\ hash\ nao\ foi\ obtido\ \n\ ainda.\n
comment8.params=
comment8.target=java.lang.String\ getName()
comment8.text=\n\ Retorna\ o\ nome\ do\ arquivo\ sem\ a\ sua\ extensao.\n\n\ @return\ nome\ do\ arquivo\ sem\ a\ sua\ extensao.\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\n\ Retorna\ o\ pathname\ absoluto\ do\ objeto.\n\ \n\ @return\ o\ pathname\ absoluto\ do\ objeto.\n
numComments=10
